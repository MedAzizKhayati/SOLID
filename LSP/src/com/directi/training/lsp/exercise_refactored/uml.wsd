@startuml lsp
interface Quackable {
    +quack()
}

interface Swimmable {
    +swim()
}

interface IOnOffDevice {
    +turnOn()
    +turnOff()
    +isOn()
}

class Duck implements Quackable, Swimmable {
    +quack()
    +swim()
}

class ElectronicDuck implements Quackable, Swimmable, IOnOffDevice {
    +quack()
    +swim()
    +turnOn()
    +turnOff()
    +isOn()
}

class Pool {
    +quack(Quackable... quackers)
    +swim(Swimmable... swimmers)
    +turnOn(IOnOffDevice... devices)
}

Pool --> Swimmable
Pool --> Quackable
Pool --> IOnOffDevice

@enduml
